name: Build-Test-Release

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:

env:
  BUILD_DIR: _build
  ARTIFACTS_DIR: _artifacts

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libgtest-dev googletest

      - name: Configure project
        run: cmake -S. -B${BUILD_DIR} -DCMAKE_BUILD_TYPE=Release

      - name: Build project
        run: cmake --build ${BUILD_DIR} --config Release

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build  # Изменено с build-artifacts на build
          path: |
            ${BUILD_DIR}/AbstractFactory
            ${BUILD_DIR}/run_tests
            ${BUILD_DIR}/CMakeCache.txt

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build  # Должно совпадать с именем при загрузке
          path: ${BUILD_DIR}/

      - name: Run tests
        run: |
          cd ${BUILD_DIR}
          ./run_tests

  release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build  # Должно совпадать с именем при загрузке
          path: ${BUILD_DIR}/

      - name: Install packaging tools
        run: sudo apt-get install -y dpkg-dev debhelper

      - name: Create DEB package
        run: |
          mkdir -p ${ARTIFACTS_DIR}
          cd ${BUILD_DIR}
          cpack -G DEB --config CPackConfig.cmake
          mv *.deb ../${ARTIFACTS_DIR}/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "Automated release with .deb package for AbstractFactoryExample"
          files: ${ARTIFACTS_DIR}/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}