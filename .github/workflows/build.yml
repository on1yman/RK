name: Build-Test-Release

on:
  push:
    branches:
      - '**'
    tags:
      - 'v*.*.*'
  pull_request:

permissions:
  contents: write  

env:
  BUILD_DIR: _build

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libgtest-dev

      - name: Build GTest
        run: |
          cd /usr/src/gtest
          sudo cmake CMakeLists.txt
          sudo make
          sudo cp lib/*.a /usr/lib

      - name: Configure project
        run: cmake -S. -B${{ env.BUILD_DIR }} -DCMAKE_BUILD_TYPE=Release

      - name: Build project
        run: cmake --build ${{ env.BUILD_DIR }} --config Release

      - name: Run tests
        run: |
          cd ${{ env.BUILD_DIR }}
          ./run_tests

      - name: Prepare artifacts
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          mkdir -p artifacts
          cd ${{ env.BUILD_DIR }}
          cpack -G DEB
          mv *.deb ../artifacts/

      - name: Upload release artifacts
        if: startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-artifact@v4
        with:
          name: release-packages
          path: artifacts/
          retention-days: 1

  release:
    needs: build_and_test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-packages
          path: release-artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "Automated release with .deb package for AbstractFactoryExample"
          files: release-artifacts/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
